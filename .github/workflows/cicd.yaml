name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up the programming environment (Node.js example)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 3: Install dependencies and run tests
    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  build-and-deploy:
    needs: build-and-test  # Only run after tests pass
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Docker registry
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 3: Build and push Docker image
    - name: Build and push Docker image
      run: |
        IMAGE_NAME=your-username/your-image-name
        VERSION=$(date +%Y%m%d%H%M%S)
        docker build -t $IMAGE_NAME:$VERSION .
        docker push $IMAGE_NAME:$VERSION
        echo "IMAGE_NAME=$IMAGE_NAME:$VERSION" >> $GITHUB_ENV

    # Step 4: Set up kubectl
    - name: Set up kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config

    # Step 5: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        IMAGE_NAME=$(echo $IMAGE_NAME)  # Get the image from the previous step
        kubectl set image deployment/your-deployment-name your-container-name=$IMAGE_NAME
        kubectl rollout status deployment/your-deployment-name
